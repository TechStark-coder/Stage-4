
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), sans-serif;
}

@layer base {
  :root {
    /* New Blue Gradient Theme */
    --background-start-rgb: 0, 131, 176; /* #0083B0 */
    --background-end-rgb: 0, 180, 219;   /* #00B4DB */

    /* For components, let's try a light theme against the blue gradient */
    --background: 200 100% 97%; /* A very light blueish white as a general component background base */
    --foreground: 210 20% 25%;  /* Dark blue/gray text for general readability */

    --card: 0 0% 100%;           /* White cards */
    --card-foreground: 210 20% 15%; /* Darker text for cards */

    --popover: 0 0% 100%;        /* White popovers */
    --popover-foreground: 210 20% 15%;

    /* Primary: Vibrant Orange */
    --primary: 25 95% 53%;  /* Vibrant Orange #FF8C00 */
    --primary-foreground: 0 0% 100%; /* White text on orange buttons */
    
    /* Accent: A slightly lighter shade of the primary or a distinct color */
    --accent: 30 100% 65%; /* Lighter Orange/Yellow */
    --accent-foreground: 210 20% 10%; /* Dark text for contrast on accent */

    /* HSL versions for button animations (if needed for other custom buttons) */
    --primary-hsl-values: 25, 95%, 53%; /* For primary color */
    --muted-hsl-values: 210, 15%, 75%; /* For muted color */
    --accent-hsl-values: 30, 100%, 65%; /* For accent color */

    --secondary: 210 10% 90%;   /* Light gray */
    --secondary-foreground: 210 20% 25%; /* Dark text on light gray */

    --muted: 210 15% 85%;       /* Slightly darker light gray */
    --muted-foreground: 210 15% 45%; /* Medium gray for muted text */

    --destructive: 0 70% 50%;    /* A clear red for destructive actions */
    --destructive-foreground: 0 0% 100%; /* White text on red */

    --border: 210 15% 80%;      /* Light gray border */
    --input: 0 0% 100%;         /* White input background */
    --input-foreground: 210 20% 15%; /* Dark text for inputs */
    --ring: 25 90% 58%;         /* Orange for focus rings */

    --radius: 0.5rem;

    /* Sidebar specific variables - adjust if sidebar is used */
    --sidebar-background: 210 20% 15%; /* Dark blue/gray sidebar */
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 25 95% 53%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 210 20% 25%;
    --sidebar-accent-foreground: 0 0% 90%;
    --sidebar-border: 210 20% 30%;
    --sidebar-ring: 25 90% 58%;

     /* Custom Button (MuhammadHasann) Variables */
    --mh-button-black-700: hsl(var(--card)); /* Themed to card background */
    --mh-button-border-radius: 9999px;
    --mh-button-transition: 0.3s ease-in-out;
    --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.75);
    --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.7); 
    --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.5);   
    --mh-button-dots-color: hsl(var(--primary-foreground));
    --mh-button-sparkle-color: hsl(var(--primary-foreground));
    --mh-button-text-color: hsl(var(--primary-foreground));
    --mh-button-text-hover-opacity: 0.7; 
     /* Disabled state for MuhammadHasann button */
    --mh-button-disabled-opacity: 0.5;
    --mh-button-disabled-bg: hsl(var(--muted));
    --mh-button-disabled-shadow: none;
  }

  .dark {
    /* If you want a separate dark mode, define variables here. 
       For now, the single theme above will be used.
       The blue gradient itself might not be considered "dark" by ShadCN's .dark class,
       so ensure component styles are robust.
    */
    --background: 210 20% 10%; /* Dark blue/gray background for dark mode */
    --foreground: 0 0% 98%;

    --card: 210 20% 15%;
    --card-foreground: 0 0% 98%;

    --popover: 210 20% 12%;
    --popover-foreground: 0 0% 98%;

    --primary: 25 90% 60%; 
    --primary-foreground: 0 0% 10%;

    --secondary: 210 15% 25%;
    --secondary-foreground: 0 0% 98%;

    --muted: 210 10% 30%;
    --muted-foreground: 0 0% 65%;

    --accent: 30 95% 70%;
    --accent-foreground: 0 0% 10%;

    --destructive: 0 65% 55%;
    --destructive-foreground: 0 0% 98%;

    --border: 210 15% 30%;
    --input: 210 15% 20%;
    --input-foreground: 0 0% 98%;
    --ring: 25 85% 65%;

    /* Custom Button (MuhammadHasann) Variables for dark mode */
    --mh-button-black-700: hsl(var(--card)); 
    --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.6);
    --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.6); 
    --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.4);   
    --mh-button-dots-color: hsl(var(--primary-foreground));
    --mh-button-sparkle-color: hsl(var(--primary-foreground));
    --mh-button-text-color: hsl(var(--primary-foreground));
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply text-foreground;
    background: #00B4DB;  /* fallback for old browsers */
    background: -webkit-linear-gradient(to right, #0083B0, #00B4DB);  /* Chrome 10-25, Safari 5.1-6 */
    background: linear-gradient(to right, #0083B0, #00B4DB); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  main {
    flex-grow: 1;
  }
}

/* Banter Loader Styles */
.loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.6); 
  z-index: 9998; 
  display: flex;
  justify-content: center;
  align-items: center;
}

.banter-loader {
  position: fixed; 
  left: 50%;
  top: 50%;
  width: 72px;
  height: 72px;
  margin-left: -36px;
  margin-top: -36px;
  z-index: 9999; 
}

.banter-loader__box {
  float: left;
  position: relative;
  width: 20px;
  height: 20px;
  margin-right: 6px;
}

.banter-loader__box:before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: hsl(var(--primary)); 
}

.banter-loader__box:nth-child(3n) {
  margin-right: 0;
  margin-bottom: 6px;
}

.banter-loader__box:nth-child(1):before, .banter-loader__box:nth-child(4):before {
  margin-left: 26px;
}

.banter-loader__box:nth-child(3):before {
  margin-top: 52px;
}

.banter-loader__box:last-child {
  margin-bottom: 0;
}

@keyframes moveBox-1 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(0px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 26px); }
  54.5454545455% { transform: translate(26px, 26px); }
  63.6363636364% { transform: translate(26px, 26px); }
  72.7272727273% { transform: translate(26px, 0px); }
  81.8181818182% { transform: translate(0px, 0px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(1) { animation: moveBox-1 4s infinite; }

@keyframes moveBox-2 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 26px); }
  54.5454545455% { transform: translate(26px, 26px); }
  63.6363636364% { transform: translate(26px, 26px); }
  72.7272727273% { transform: translate(26px, 26px); }
  81.8181818182% { transform: translate(0px, 26px); }
  90.9090909091% { transform: translate(0px, 26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(2) { animation: moveBox-2 4s infinite; }

@keyframes moveBox-3 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(-26px, 0); }
  45.4545454545% { transform: translate(-26px, 0); }
  54.5454545455% { transform: translate(-26px, 0); }
  63.6363636364% { transform: translate(-26px, 0); }
  72.7272727273% { transform: translate(-26px, 0); }
  81.8181818182% { transform: translate(-26px, -26px); }
  90.9090909091% { transform: translate(0px, -26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(3) { animation: moveBox-3 4s infinite; }

@keyframes moveBox-4 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, -26px); }
  36.3636363636% { transform: translate(0px, -26px); }
  45.4545454545% { transform: translate(0px, 0px); }
  54.5454545455% { transform: translate(0px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(-26px, -26px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(4) { animation: moveBox-4 4s infinite; }

@keyframes moveBox-5 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(0, 0); }
  27.2727272727% { transform: translate(0, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 0); }
  54.5454545455% { transform: translate(26px, 0); }
  63.6363636364% { transform: translate(26px, 0); }
  72.7272727273% { transform: translate(26px, 0); }
  81.8181818182% { transform: translate(26px, -26px); }
  90.9090909091% { transform: translate(0px, -26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(5) { animation: moveBox-5 4s infinite; }

@keyframes moveBox-6 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, 0); }
  36.3636363636% { transform: translate(0px, 0); }
  45.4545454545% { transform: translate(0px, 0); }
  54.5454545455% { transform: translate(0px, 0); }
  63.6363636364% { transform: translate(0px, 0); }
  72.7272727273% { transform: translate(0px, 26px); }
  81.8181818182% { transform: translate(-26px, 26px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(6) { animation: moveBox-6 4s infinite; }

@keyframes moveBox-7 {
  9.0909090909% { transform: translate(26px, 0); }
  18.1818181818% { transform: translate(26px, 0); }
  27.2727272727% { transform: translate(26px, 0); }
  36.3636363636% { transform: translate(0px, 0); }
  45.4545454545% { transform: translate(0px, -26px); }
  54.5454545455% { transform: translate(26px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(0px, 0px); }
  90.9090909091% { transform: translate(26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(7) { animation: moveBox-7 4s infinite; }

@keyframes moveBox-8 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, -26px); }
  36.3636363636% { transform: translate(0px, -26px); }
  45.4545454545% { transform: translate(0px, -26px); }
  54.5454545455% { transform: translate(0px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(26px, -26px); }
  90.9090909091% { transform: translate(26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(8) { animation: moveBox-8 4s infinite; }

@keyframes moveBox-9 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(-26px, 0); }
  45.4545454545% { transform: translate(0px, 0); }
  54.5454545455% { transform: translate(0px, 0); }
  63.6363636364% { transform: translate(-26px, 0); }
  72.7272727273% { transform: translate(-26px, 0); }
  81.8181818182% { transform: translate(-52px, 0); }
  90.9090909091% { transform: translate(-26px, 0); }
  100% { transform: translate(0px, 0); }
}
.banter-loader__box:nth-child(9) { animation: moveBox-9 4s infinite; }

/* AI Analysis Loader ("mrhyddenn" spinner) Styles */
.ai-analysis-loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.7); 
  z-index: 10000; 
  display: flex;
  justify-content: center;
  align-items: center;
}

.ai-spinner { 
  width: 3em;
  height: 3em;
  border-radius: 50%;
  border: 2px solid hsl(var(--border)); 
  box-shadow: -10px -10px 10px hsla(var(--primary-hsl-values), 0.7), 
              0px -10px 10px 0px hsla(var(--accent-hsl-values), 0.7),  
              10px -10px 10px hsla(var(--destructive), 0.5), 
              10px 0 10px hsla(0, 70%, 50%, 0.8), 
              10px 10px 10px 0px hsla(var(--accent-hsl-values), 0.6), 
              0 10px 10px 0px hsla(var(--accent-hsl-values), 0.5), 
              -10px 10px 10px 0px hsla(var(--accent-hsl-values), 0.4);
  animation: rot55 0.7s linear infinite;
}

.ai-spinner-inner { 
  border: 2px solid hsl(var(--border)); 
  width: 1.5em;
  height: 1.5em;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes rot55 {
  to {
    transform: rotate(360deg);
  }
}

/* Codepen Button (Download PDF in ObjectAnalysisCard) */
.codepen-button {
  display: block;
  cursor: pointer;
  color: hsl(var(--primary-foreground));
  position: relative;
  text-decoration: none;
  font-weight: 600;
  border-radius: 6px;
  overflow: hidden;
  padding: 3px;
  isolation: isolate;
}

.codepen-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 400%;
  height: 100%;
  background: linear-gradient(115deg, hsl(var(--primary-hsl-values)), hsl(var(--accent-hsl-values)), hsla(var(--primary-hsl-values),0.8), hsl(var(--primary)), hsla(var(--primary-hsl-values), 0.6));
  background-size: 25% 100%;
  animation: an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop .75s linear infinite;
  animation-play-state: paused;
  translate: -5% 0%;
  transition: translate 0.25s ease-out;
}

.codepen-button:hover::before {
  animation-play-state: running;
  transition-duration: 0.75s;
  translate: 0% 0%;
}

@keyframes an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop {
  to {
    transform: translateX(-25%);
  }
}

.codepen-button span {
  position: relative;
  display: flex; 
  align-items: center; 
  justify-content: center; 
  padding: 0.8rem 1.3rem; 
  font-size: 0.9rem; 
  background: hsl(var(--card)); 
  border-radius: 3px;
  height: 100%;
}

/* Welcome Message Shine Effect */
.welcome-message-shine {
  background: linear-gradient(to right, hsl(var(--foreground)) 40%, hsl(var(--primary)) 50%, hsl(var(--foreground)) 60%);
  background-size: 250% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: welcome-shine 5s linear infinite alternate; 
  -webkit-text-size-adjust: none;
  white-space: nowrap; /* Keep it on one line for better effect */
  display: inline-block; /* Needed for some text-clip scenarios */
}

@keyframes welcome-shine {
  0% {
    background-position: -125% center; 
  }
  100% {
    background-position: 125% center; 
  }
}


/* MuhammadHasann Animated Button CSS (for Analyze Images) */
.analyze-button-animated {
  --mh-button-black-700: hsl(var(--card)); /* Themed */
  --mh-button-border-radius: 9999px;
  --mh-button-transition: 0.3s ease-in-out;
  --mh-button-offset: 2px;
  --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.75);
  --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.7);
  --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.5);
  --mh-button-dots-color: hsl(var(--primary-foreground)); /* Themed */
  --mh-button-sparkle-color: hsl(var(--primary-foreground)); /* Themed */
  --mh-button-text-color: hsl(var(--primary-foreground)); /* Themed */
  --mh-button-text-hover-opacity: 0.7;
  --mh-button-disabled-opacity: 0.5;
  --mh-button-disabled-bg: hsl(var(--muted)); /* Themed */
  --mh-button-disabled-shadow: none;

  cursor: pointer;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  transform-origin: center;
  padding: 0.8rem 1.5rem;
  background-color: transparent;
  border: none;
  border-radius: var(--mh-button-border-radius);
  transform: scale(calc(1 + (var(--active, 0) * 0.05))); 
  transition: transform var(--mh-button-transition);
  min-width: 150px;
}

.analyze-button-animated::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: hsl(var(--primary)); /* Themed */
  border-radius: var(--mh-button-border-radius);
  box-shadow: inset 0 0.5px hsl(var(--border)), inset 0 -1px 2px 0 hsl(0, 0%, 0%),
    0px 2px 5px -2px hsla(0 0% 0% / calc(1 - var(--active, 0))), 
    0 0 0 calc(var(--active, 0) * 0.25rem) var(--mh-button-active-shadow-color); 
  transition: all var(--mh-button-transition);
  z-index: 0;
}

.analyze-button-animated::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: hsla(var(--primary-hsl-values), 0.75); 
  background-image: radial-gradient(
      at 51% 89%,
      var(--mh-button-gradient-start) 0px,
      transparent 50%
    ),
    radial-gradient(at 100% 100%, var(--mh-button-gradient-mid) 0px, transparent 50%),
    radial-gradient(at 22% 91%, var(--mh-button-gradient-mid) 0px, transparent 50%);
  background-position: top;
  opacity: var(--active, 0);
  border-radius: var(--mh-button-border-radius);
  transition: opacity var(--mh-button-transition);
  z-index: 2;
}

.analyze-button-animated:is(:hover, :focus-visible) {
  --active: 1;
}
.analyze-button-animated:active {
  transform: scale(0.98); 
}

.analyze-button-animated .dots_border {
  --size_border: calc(100% + 2px);
  overflow: hidden;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--size_border);
  height: var(--size_border);
  background-color: transparent;
  border-radius: var(--mh-button-border-radius);
  z-index: -10; 
}

.analyze-button-animated .dots_border::before {
  content: "";
  position: absolute;
  top: 30%; 
  left: 50%;
  transform: translate(-50%, -50%) rotate(0deg); 
  transform-origin: center; 
  width: 100%;
  height: 2rem;
  background-color: var(--mh-button-dots-color); 
  mask: linear-gradient(transparent 0%, var(--mh-button-dots-color) 120%); 
  animation: mh-rotateDots 2s linear infinite; 
}

@keyframes mh-rotateDots { 
  to {
    transform: translate(-50%, -50%) rotate(360deg); 
  }
}

.analyze-button-animated .sparkle {
  position: relative;
  z-index: 10;
  width: 1.5rem; 
  height: 1.5rem; 
}

.analyze-button-animated .sparkle .path {
  fill: var(--mh-button-sparkle-color); 
  stroke: var(--mh-button-sparkle-color); 
  transform-origin: center;
  color: var(--mh-button-sparkle-color);
}

.analyze-button-animated:is(:hover, :focus) .sparkle .path {
  animation: mh-pathSparkle 1.5s linear 0.5s infinite; 
}

.analyze-button-animated .sparkle .path:nth-child(1) {
  --scale_path_1: 1.2;
}
.analyze-button-animated .sparkle .path:nth-child(2) {
  --scale_path_2: 1.2;
}
.analyze-button-animated .sparkle .path:nth-child(3) {
  --scale_path_3: 1.2;
}

@keyframes mh-pathSparkle { 
  0%,
  34%,
  71%,
  100% {
    transform: scale(1);
  }
  17% {
    transform: scale(var(--scale_path_1, 1));
  }
  49% {
    transform: scale(var(--scale_path_2, 1));
  }
  83% {
    transform: scale(var(--scale_path_3, 1));
  }
}

.analyze-button-animated .text_button {
  position: relative;
  z-index: 10;
  background-image: linear-gradient(
    90deg,
    var(--mh-button-text-color) 0%, 
    hsla(0 0% 100% / var(--active, 0)) 120% 
  );
  background-clip: text;
  font-size: 1rem;
  color: transparent;
  font-weight: 600;
}

/* Disabled state for analyze-button-animated */
.analyze-button-animated:disabled {
  cursor: not-allowed;
  /* background-color: var(--mh-button-disabled-bg); Ensure the ::before element handles disabled bg */
}

.analyze-button-animated:disabled::before {
  background-color: var(--mh-button-disabled-bg) !important; /* Override active bg */
  box-shadow: var(--mh-button-disabled-shadow) !important; /* Remove active shadow */
  opacity: var(--mh-button-disabled-opacity);
}

.analyze-button-animated:disabled::after,
.analyze-button-animated:disabled .dots_border::before {
  display: none; 
}

.analyze-button-animated:disabled .sparkle {
  opacity: 0.3; 
}
.analyze-button-animated:disabled .text_button {
  background-image: none; 
  color: hsl(var(--muted-foreground)); 
  opacity: 0.7;
}


/* Botao Download Button CSS (for RoomCard PDF download) - Renamed to .download-button-card */
.download-button-card { 
  width: 40px; /* Adjusted for icon only initial state */
  height: 40px;/* Adjusted for icon only initial state */
  border-radius: 50%; /* Circular */
  border: none;
  /* box-shadow: 1px 1px hsla(var(--primary-hsl-values), 0.37);  */
  padding: 0; /* Remove padding for icon-only */
  background: hsl(var(--card)); /* Use card background for less intrusion */
  color: hsl(var(--primary)); /* Icon color based on primary */
  cursor: pointer;
  /* filter: drop-shadow(0 0 5px hsla(var(--primary-hsl-values), 0.3));  */
  transition: .3s linear;
  display: flex; 
  align-items: center; 
  justify-content: center; 
  position: relative; /* For tooltip positioning */
}

.download-button-card .svgIcon { /* Updated class name for SVG */
  display: inline-block; /* Ensure SVG is visible */
  width: 1.2em; /* Adjust icon size as needed */
  height: 1.2em;
  fill: hsl(var(--primary)); /* Use primary color for icon fill */
}

.download-button-card .icon2 { /* Keeping this structure as per original HTML */
  display: none; /* Initially hidden as per original example */
}

.download-button-card .tooltip {
  position: absolute;
  /* Adjust tooltip positioning if needed; default was right: -105px */
  top: 50%;
  left: calc(100% + 10px); /* Position to the right of the button */
  transform: translateY(-50%);
  opacity: 0;
  visibility: hidden; /* Hide completely when not hovered */
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  padding: 5px 10px;
  border-radius: 5px;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
  pointer-events: none;
  letter-spacing: 0.5px;
  white-space: nowrap;
  z-index: 100; /* Ensure tooltip is on top */
}

.download-button-card .tooltip::before {
  position: absolute;
  content: "";
  width: 8px; /* Smaller arrow */
  height: 8px;
  background-color: hsl(var(--popover));
  transform: translateY(-50%) rotate(45deg);
  top: 50%;
  left: -4px; /* Position arrow correctly */
}

.download-button-card:hover .tooltip {
  opacity: 1;
  visibility: visible; /* Make visible on hover */
}

.download-button-card:hover {
  background-color: hsl(var(--primary)); /* Primary color on hover */
  /* filter: drop-shadow(0 0 8px hsla(var(--primary-hsl-values), 0.5)); */
}

.download-button-card:hover .svgIcon {
  fill: hsl(var(--primary-foreground)); /* Icon color changes to contrast with primary bg */
  animation: slide-in-top 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

/* Re-add keyframes if they were removed by mistake previously for this button */
@keyframes slide-in-top { 
  0% {
    transform: translateY(-5px); /* Adjusted distance */
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}

/* Flipping Auth Form CSS */
/* Using auth- prefix to avoid conflicts */
.auth-container { 
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 1000px; 
  min-height: 450px; /* Ensure enough height for the card */
  width: 100%; /* Ensure it takes available width for centering */
}

.auth-form { 
  display: flex; /* Changed from flex to relative for positioning context */
  position: relative; /* Added */
  width: 350px; /* Set a fixed width */
  height: auto; /* Let content define height, or set a fixed min-height */
  min-height: 480px; /* Example min-height */
  transform-style: preserve-3d;
  transition: transform 1s ease;
}

.auth-form .form_front,
.auth-form .form_back {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem; /* Adjusted gap */
  position: absolute;
  width: 100%; /* Ensure full width of parent */
  height: 100%; /* Ensure full height of parent */
  backface-visibility: hidden;
  padding: 40px 30px; /* Adjusted padding */
  border-radius: 15px;
  background-color: hsla(var(--card), 0.9); /* Themed with slight transparency */
  box-shadow: inset 1px 1px 5px hsla(var(--card-foreground), 0.1),
              inset -1px -1px 3px hsla(var(--border), 0.5),
              0 4px 15px hsla(var(--background), 0.3); /* Themed shadows */
}

.auth-form .form_back {
  transform: rotateY(-180deg);
}

.auth-form_details { 
  font-size: 1.75rem; /* Adjusted size */
  font-weight: 600;
  padding-bottom: 0.5rem; /* Adjusted padding */
  color: hsl(var(--card-foreground)); /* Themed */
  text-align: center;
}

.auth-input { 
  width: 100%; /* Full width within padding */
  min-height: 40px; /* Adjusted height */
  color: hsl(var(--input-foreground)); /* Themed */
  outline: none;
  transition: 0.35s;
  padding: 0px 10px; /* Adjusted padding */
  background-color: hsl(var(--input)); /* Themed */
  border-radius: 6px;
  border: 1px solid hsl(var(--border)); /* Themed */
  box-shadow: inset 0 1px 3px hsla(var(--background), 0.5); /* Inner shadow for depth */
}

.auth-input::placeholder {
  color: hsl(var(--muted-foreground)); /* Themed */
}

.auth-input:focus::placeholder {
  transition: 0.3s;
  opacity: 0;
}

.auth-input:focus {
  transform: scale(1.02); /* Slight scale on focus */
  border-color: hsl(var(--ring)); /* Use ring color for focus border */
  box-shadow: inset 0 1px 3px hsla(var(--background), 0.5), 0 0 0 2px hsla(var(--ring), 0.5); /* Focus shadow */
}

.auth-btn { 
  padding: 10px 25px; /* Adjusted padding */
  width: 100%; /* Full width */
  cursor: pointer;
  background-color: hsl(var(--primary)); /* Themed */
  border-radius: 6px;
  border: 1px solid hsl(var(--primary)); /* Consistent border */
  color: hsl(var(--primary-foreground)); /* Themed */
  font-size: 1rem; /* Adjusted font size */
  font-weight: 600; /* Bold text */
  transition: 0.2s ease-out; /* Smooth transition */
}

.auth-btn:hover {
  background-color: hsla(var(--primary-hsl-values), 0.9); /* Slightly darken on hover */
  transform: translateY(-1px); /* Slight lift on hover */
}

.auth-btn:focus-visible { /* For keyboard navigation */
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.auth-btn:active {
  transform: translateY(0px); /* Reset lift on active */
}

.auth-form .auth-switch { 
  font-size: 0.875rem; /* Adjusted size */
  color: hsl(var(--muted-foreground)); /* Themed */
  text-align: center;
}

.auth-form .auth-switch .auth-signup_tog { 
  font-weight: 600; 
  cursor: pointer;
  text-decoration: none; /* Remove default underline */
  color: hsl(var(--primary)); /* Themed */
}
.auth-form .auth-switch .auth-signup_tog:hover {
  text-decoration: underline;
}

.auth-container #signup_toggle { 
  display: none;
}

.auth-container #signup_toggle:checked + .auth-form {
  transform: rotateY(-180deg);
}

/* Responsive adjustments for auth form */
@media (max-width: 400px) {
  .auth-form {
    width: 90%;
    min-height: auto; /* Allow height to adjust */
  }
  .auth-form .form_front,
  .auth-form .form_back {
    padding: 30px 20px;
  }
  .auth-form_details {
    font-size: 1.5rem;
  }
}

/* Custom 3D Card Effect for Room Cards - Prefixed with custom-3d- */
.custom-3d-card-wrapper {
  position: relative;
  width: 280px; /* Increased width */
  height: 374px; /* Proportionally increased height */
  transition: 200ms;
  margin: 0.5rem; /* Add some margin for spacing */
}

.custom-3d-card-wrapper:active {
  width: 270px; /* Adjust active state size */
  height: 365px;
}

.custom-3d-card-interactive-area { /* This is the main content area that gets transformed */
  position: absolute;
  inset: 0;
  z-index: 0; /* Behind trackers for hover, but content inside can have higher z-index */
  display: flex;
  flex-direction: column; /* To layout content inside */
  justify-content: space-between; /* To push footer to bottom */
  align-items: stretch; /* Ensure children can take full width */
  border-radius: 20px;
  transition: 700ms;
  /* Updated gradient to Blue + Black */
  background: linear-gradient(43deg, hsl(var(--primary)) 0%, #1a1a1a 46%, #000000 100%);
  overflow: hidden; /* Important to contain absolutely positioned children like ::before */
}

/* Hover glow effect */
.custom-3d-card-wrapper:hover .custom-3d-card-interactive-area {
  box-shadow: 0 0 25px 10px hsla(var(--primary-hsl-values), 0.4); /* Blue glow */
  filter: brightness(1.15); /* Slightly brighten on hover */
}

.custom-3d-card-wrapper:hover .custom-3d-card-interactive-area::before { 
  transition: 200ms;
  content: ''; /* Content must be defined for ::before to show */
  opacity: 0.6; /* Increase opacity of blur on hover */
}

.custom-3d-card-canvas {
  perspective: 800px;
  inset: 0;
  z-index: 1; /* Canvas is above the wrapper's base, but content area is child of canvas */
  position: absolute;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr 1fr;
  gap: 0px 0px;
  grid-template-areas: "tr-1 tr-2 tr-3 tr-4 tr-5"
    "tr-6 tr-7 tr-8 tr-9 tr-10"
    "tr-11 tr-12 tr-13 tr-14 tr-15"
    "tr-16 tr-17 tr-18 tr-19 tr-20"
    "tr-21 tr-22 tr-23 tr-24 tr-25";
}

.custom-3d-card-interactive-area::before {
  content: '';
  /* Updated gradient for blur */
  background: linear-gradient(43deg, hsl(var(--primary)) 0%, #1a1a1a 46%, #000000 100%);
  filter: blur(2rem);
  opacity: 0.4; /* Initial opacity */
  width: 100%;
  height: 100%;
  position: absolute;
  top:0; 
  left:0;
  z-index: -1; /* Behind the interactive area's content */
  transition: 200ms;
  border-radius: inherit; /* Inherit border-radius from parent */
}

.custom-3d-tracker {
  /* Grid items for hover. These SHOULD NOT block pointer events
     if the content below them needs to be clickable.
     However, for this specific CSS effect, they *are* the hover targets.
     The issue of button clickability needs careful handling.
  */
   /* z-index removed from here, let them be in the grid flow.
      The .custom-3d-card-interactive-area which is a sibling, will be transformed.
      If buttons are *inside* .custom-3d-card-interactive-area, their clickability depends on
      whether the trackers fully obscure .custom-3d-card-interactive-area visually/interactively.
   */
}

.custom-3d-tracker:hover {
  cursor: pointer;
}

/* These apply the transform to the .custom-3d-card-interactive-area when a tracker is hovered */
.custom-3d-tracker:hover ~ .custom-3d-card-interactive-area { 
  transition: 125ms ease-in-out !important; /* Force transition */
}

.tr-1 { grid-area: tr-1; }
.tr-2 { grid-area: tr-2; }
.tr-3 { grid-area: tr-3; }
.tr-4 { grid-area: tr-4; }
.tr-5 { grid-area: tr-5; }
.tr-6 { grid-area: tr-6; }
.tr-7 { grid-area: tr-7; }
.tr-8 { grid-area: tr-8; }
.tr-9 { grid-area: tr-9; }
.tr-10 { grid-area: tr-10; }
.tr-11 { grid-area: tr-11; }
.tr-12 { grid-area: tr-12; }
.tr-13 { grid-area: tr-13; }
.tr-14 { grid-area: tr-14; }
.tr-15 { grid-area: tr-15; }
.tr-16 { grid-area: tr-16; }
.tr-17 { grid-area: tr-17; }
.tr-18 { grid-area: tr-18; }
.tr-19 { grid-area: tr-19; }
.tr-20 { grid-area: tr-20; }
.tr-21 { grid-area: tr-21; }
.tr-22 { grid-area: tr-22; }
.tr-23 { grid-area: tr-23; }
.tr-24 { grid-area: tr-24; }
.tr-25 { grid-area: tr-25; }

.tr-1:hover ~ .custom-3d-card-interactive-area { transform: rotateX(20deg) rotateY(-10deg) rotateZ(0deg); }
.tr-2:hover ~ .custom-3d-card-interactive-area { transform: rotateX(20deg) rotateY(-5deg) rotateZ(0deg); }
.tr-3:hover ~ .custom-3d-card-interactive-area { transform: rotateX(20deg) rotateY(0deg) rotateZ(0deg); }
.tr-4:hover ~ .custom-3d-card-interactive-area { transform: rotateX(20deg) rotateY(5deg) rotateZ(0deg); }
.tr-5:hover ~ .custom-3d-card-interactive-area { transform: rotateX(20deg) rotateY(10deg) rotateZ(0deg); }
.tr-6:hover ~ .custom-3d-card-interactive-area { transform: rotateX(10deg) rotateY(-10deg) rotateZ(0deg); }
.tr-7:hover ~ .custom-3d-card-interactive-area { transform: rotateX(10deg) rotateY(-5deg) rotateZ(0deg); }
.tr-8:hover ~ .custom-3d-card-interactive-area { transform: rotateX(10deg) rotateY(0deg) rotateZ(0deg); }
.tr-9:hover ~ .custom-3d-card-interactive-area { transform: rotateX(10deg) rotateY(5deg) rotateZ(0deg); }
.tr-10:hover ~ .custom-3d-card-interactive-area { transform: rotateX(10deg) rotateY(10deg) rotateZ(0deg); }
.tr-11:hover ~ .custom-3d-card-interactive-area { transform: rotateX(0deg) rotateY(-10deg) rotateZ(0deg); }
.tr-12:hover ~ .custom-3d-card-interactive-area { transform: rotateX(0deg) rotateY(-5deg) rotateZ(0deg); }
.tr-13:hover ~ .custom-3d-card-interactive-area { transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg); }
.tr-14:hover ~ .custom-3d-card-interactive-area { transform: rotateX(0deg) rotateY(5deg) rotateZ(0deg); }
.tr-15:hover ~ .custom-3d-card-interactive-area { transform: rotateX(0deg) rotateY(10deg) rotateZ(0deg); }
.tr-16:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-10deg) rotateY(-10deg) rotateZ(0deg); }
.tr-17:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-10deg) rotateY(-5deg) rotateZ(0deg); }
.tr-18:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-10deg) rotateY(0deg) rotateZ(0deg); }
.tr-19:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-10deg) rotateY(5deg) rotateZ(0deg); }
.tr-20:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-10deg) rotateY(10deg) rotateZ(0deg); }
.tr-21:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-20deg) rotateY(-10deg) rotateZ(0deg); }
.tr-22:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-20deg) rotateY(-5deg) rotateZ(0deg); }
.tr-23:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-20deg) rotateY(0deg) rotateZ(0deg); }
.tr-24:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-20deg) rotateY(5deg) rotateZ(0deg); }
.tr-25:hover ~ .custom-3d-card-interactive-area { transform: rotateX(-20deg) rotateY(10deg) rotateZ(0deg); }

.noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Download button for RoomCard - .download-button-card */
.download-button-card {
  width: 40px; /* Default size */
  height: 40px;
  border-radius: 50%;
  border: none;
  background-color: hsla(var(--card), 0.5); /* Semi-transparent card color */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative; /* For tooltip */
  transition: background-color 0.3s, transform 0.3s;
  box-shadow: 0 1px 3px hsla(var(--shadow, 0 0% 0% / 0.1)); /* Subtle shadow */
}

.download-button-card .svgIcon { /* SVG inside the button */
  fill: hsl(var(--primary)); /* Primary color for the icon */
  height: 1.1em; /* Adjust size if needed */
  width: 1.1em;
  transition: fill 0.3s, transform 0.3s;
}

.download-button-card .icon2 { /* Second part of icon, hidden by default */
  display: none; 
}

.download-button-card .tooltip {
  position: absolute;
  top: 50%;
  left: calc(100% + 12px); /* Position to the right with some space */
  transform: translateY(-50%);
  opacity: 0;
  visibility: hidden;
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  padding: 6px 12px; /* Slightly more padding */
  border-radius: 6px; /* Match theme radius */
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
  pointer-events: none;
  letter-spacing: 0.5px;
  white-space: nowrap;
  z-index: 50; /* Ensure it's above card content but below modals */
  box-shadow: 0 2px 8px hsla(var(--shadow, 0 0% 0% / 0.15));
}

.download-button-card .tooltip::before {
  position: absolute;
  content: "";
  width: 8px;
  height: 8px;
  background-color: hsl(var(--popover));
  transform: translateY(-50%) rotate(45deg);
  top: 50%;
  left: -4px; /* Adjust for arrow position */
}

.download-button-card:hover .tooltip {
  opacity: 1;
  visibility: visible;
}

.download-button-card:hover {
  background-color: hsl(var(--primary));
  transform: scale(1.1); /* Slight scale on hover */
}

.download-button-card:hover .svgIcon {
  fill: hsl(var(--primary-foreground)); /* Contrasting color for icon on hover */
  animation: slide-in-top 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.download-button-card:disabled,
.download-button-card[disabled] {
  background-color: hsl(var(--muted));
  opacity: 0.6;
  cursor: not-allowed;
}
.download-button-card:disabled .svgIcon,
.download-button-card[disabled] .svgIcon {
  fill: hsl(var(--muted-foreground));
}
.download-button-card:disabled:hover .tooltip,
.download-button-card[disabled]:hover .tooltip {
  opacity: 0;
  visibility: hidden;
}

/* Keyframes for download icon animation if needed */
@keyframes slide-in-top {
  0% {
    transform: translateY(-6px); /* Adjusted for icon size */
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}
