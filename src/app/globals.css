
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), sans-serif;
  /* Light Gray Theme background */
  background-color: hsl(var(--background));
}

@layer base {
  :root {
    /* Light Gray Theme */
    --background: 220 20% 96%; /* Light Gray: #F0F2F5 */
    --foreground: 220 10% 20%; /* Dark Gray for text */

    --card: 0 0% 100%;           /* White cards */
    --card-foreground: 220 10% 20%; /* Dark Gray text for cards */

    --popover: 0 0% 100%;        /* White popovers */
    --popover-foreground: 220 10% 20%;

    /* Primary: A calm, professional Blue - this was from the initial request, can be changed */
    --primary: 207 90% 54%;  /* Calm Blue #64B5F6 */
    --primary-foreground: 210 40% 98%; /* Light text for blue buttons */
    --primary-hsl-values: 207, 90%, 54%; 
    
    /* Accent: Soft Orange #FFCC80 */
    --accent: 34 100% 75%; /* Soft Orange #FFCC80 */
    --accent-foreground: 25 80% 15%; /* Dark text for contrast on accent */
    --accent-hsl-values: 34, 100%, 75%;

    --secondary: 220 10% 85%;   /* Medium Gray */
    --secondary-foreground: 220 10% 25%; 

    --muted: 220 15% 90%;       /* Lighter Gray */
    --muted-foreground: 220 10% 45%; 
    --muted-hsl-values: 220, 15%, 90%; /* used for disabled button */

    --destructive: 0 70% 50%;    /* A clear red for destructive actions */
    --destructive-foreground: 0 0% 100%; 

    --border: 220 15% 85%;      /* Gray border */
    --input: 0 0% 100%;         /* White input background */
    --input-foreground: 220 10% 15%; 
    --ring: 207 90% 60%;         /* Blue for focus rings, matching primary */

    --radius: 0.5rem;

    /* Sidebar specific variables - Light Mode */
    --sidebar-background: 220 10% 15%; /* Dark gray sidebar for contrast in light mode */
    --sidebar-foreground: 0 0% 95%;    /* Light text on dark sidebar */
    --sidebar-primary: 207 90% 54%;    /* Primary color for sidebar elements */
    --sidebar-primary-foreground: 0 0% 100%; /* White text on primary elements */
    --sidebar-accent: 220 10% 25%;     /* Darker gray for accents in sidebar */
    --sidebar-accent-foreground: 0 0% 90%; /* Light text on accent */
    --sidebar-border: 220 10% 30%;     /* Border color within sidebar */
    --sidebar-ring: 207 70% 60%;       /* Focus ring color for sidebar */

     /* Custom Button (MuhammadHasann) Variables for Light Mode */
    --mh-button-black-700: hsl(var(--primary)); /* Base color of button */
    --mh-button-border-radius: 9999px;
    --mh-button-transition: 0.3s ease-in-out;
    --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.75);
    --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.7); 
    --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.5);   
    --mh-button-dots-color: hsl(var(--primary-foreground));
    --mh-button-sparkle-color: hsl(var(--primary-foreground));
    --mh-button-text-color: hsl(var(--primary-foreground));
    --mh-button-text-hover-opacity: 0.85; /* Slightly less transparent text on hover for light mode */
     /* Disabled state for MuhammadHasann button */
    --mh-button-disabled-opacity: 0.5;
    --mh-button-disabled-bg: hsl(var(--muted));
    --mh-button-disabled-shadow: none;
  }

  .dark {
    /* Dark Theme for Light Gray base */
    --background: 220 10% 12%; /* Very Dark Gray/Almost Black for background */
    --foreground: 220 10% 85%; /* Light Gray for text */

    --card: 220 10% 18%;           /* Darker Gray for cards */
    --card-foreground: 220 10% 85%; /* Light Gray text for cards */

    --popover: 220 10% 15%;        /* Even Darker Gray for popovers */
    --popover-foreground: 220 10% 85%;

    /* Primary: Still using the Calm Blue for consistency, ensure it's vibrant enough */
    --primary: 207 80% 60%;  /* Slightly brighter blue for dark mode */
    --primary-foreground: 210 40% 98%; /* Light text */
    --primary-hsl-values: 207, 80%, 60%;
    
    /* Accent: Soft Orange, ensure contrast */
    --accent: 34 90% 70%; /* Brighter orange for dark mode */
    --accent-foreground: 25 80% 15%; /* Dark text */
    --accent-hsl-values: 34, 90%, 70%;

    --secondary: 220 10% 25%;   /* Medium Dark Gray */
    --secondary-foreground: 220 10% 75%; 

    --muted: 220 10% 30%;       /* Darker Muted Gray */
    --muted-foreground: 220 10% 60%; 
    --muted-hsl-values: 220, 10%, 30%;

    --destructive: 0 60% 50%;    /* Red */
    --destructive-foreground: 0 0% 100%; 

    --border: 220 10% 25%;      /* Dark Gray border */
    --input: 220 10% 22%;         /* Dark input background */
    --input-foreground: 220 10% 80%; 
    --ring: 207 80% 65%;         /* Brighter blue for focus rings */

    /* Sidebar specific variables - Dark Mode */
    --sidebar-background: 220 10% 10%; /* Even darker for sidebar */
    --sidebar-foreground: 0 0% 90%;    /* Light text */
    --sidebar-primary: 207 80% 60%;    /* Primary color */
    --sidebar-primary-foreground: 0 0% 100%; /* White text */
    --sidebar-accent: 220 10% 20%;     /* Darker gray accent */
    --sidebar-accent-foreground: 0 0% 85%; /* Light text */
    --sidebar-border: 220 10% 25%;     /* Border */
    --sidebar-ring: 207 80% 65%;       /* Focus ring */

     /* Custom Button (MuhammadHasann) Variables for dark mode */
    --mh-button-black-700: hsl(var(--primary)); 
    --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.6);
    --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.6); 
    --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.4);   
    --mh-button-dots-color: hsl(var(--primary-foreground));
    --mh-button-sparkle-color: hsl(var(--primary-foreground));
    --mh-button-text-color: hsl(var(--primary-foreground));
  }
}


@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  main {
    flex-grow: 1;
  }
}

/* Banter Loader Styles */
.loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: hsla(var(--background), 0.6); /* Use background with opacity */
  backdrop-filter: blur(2px);
  z-index: 9998; 
  display: flex;
  justify-content: center;
  align-items: center;
}

.banter-loader {
  position: fixed; 
  left: 50%;
  top: 50%;
  width: 72px;
  height: 72px;
  margin-left: -36px;
  margin-top: -36px;
  z-index: 9999; 
}

.banter-loader__box {
  float: left;
  position: relative;
  width: 20px;
  height: 20px;
  margin-right: 6px;
}

.banter-loader__box:before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: hsl(var(--primary)); 
}

.banter-loader__box:nth-child(3n) {
  margin-right: 0;
  margin-bottom: 6px;
}

.banter-loader__box:nth-child(1):before, .banter-loader__box:nth-child(4):before {
  margin-left: 26px;
}

.banter-loader__box:nth-child(3):before {
  margin-top: 52px;
}

.banter-loader__box:last-child {
  margin-bottom: 0;
}

@keyframes moveBox-1 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(0px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 26px); }
  54.5454545455% { transform: translate(26px, 26px); }
  63.6363636364% { transform: translate(26px, 26px); }
  72.7272727273% { transform: translate(26px, 0px); }
  81.8181818182% { transform: translate(0px, 0px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(1) { animation: moveBox-1 4s infinite; }

@keyframes moveBox-2 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 26px); }
  54.5454545455% { transform: translate(26px, 26px); }
  63.6363636364% { transform: translate(26px, 26px); }
  72.7272727273% { transform: translate(26px, 26px); }
  81.8181818182% { transform: translate(0px, 26px); }
  90.9090909091% { transform: translate(0px, 26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(2) { animation: moveBox-2 4s infinite; }

@keyframes moveBox-3 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(-26px, 0); }
  45.4545454545% { transform: translate(-26px, 0); }
  54.5454545455% { transform: translate(-26px, 0); }
  63.6363636364% { transform: translate(-26px, 0); }
  72.7272727273% { transform: translate(-26px, 0); }
  81.8181818182% { transform: translate(-26px, -26px); }
  90.9090909091% { transform: translate(0px, -26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(3) { animation: moveBox-3 4s infinite; }

@keyframes moveBox-4 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, -26px); }
  36.3636363636% { transform: translate(0px, -26px); }
  45.4545454545% { transform: translate(0px, 0px); }
  54.5454545455% { transform: translate(0px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(-26px, -26px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(4) { animation: moveBox-4 4s infinite; }

@keyframes moveBox-5 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(0, 0); }
  27.2727272727% { transform: translate(0, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 0); }
  54.5454545455% { transform: translate(26px, 0); }
  63.6363636364% { transform: translate(26px, 0); }
  72.7272727273% { transform: translate(26px, 0); }
  81.8181818182% { transform: translate(26px, -26px); }
  90.9090909091% { transform: translate(0px, -26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(5) { animation: moveBox-5 4s infinite; }

@keyframes moveBox-6 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, 0); }
  36.3636363636% { transform: translate(0px, 0); }
  45.4545454545% { transform: translate(0px, 0); }
  54.5454545455% { transform: translate(0px, 0); }
  63.6363636364% { transform: translate(0px, 0); }
  72.7272727273% { transform: translate(0px, 26px); }
  81.8181818182% { transform: translate(-26px, 26px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(6) { animation: moveBox-6 4s infinite; }

@keyframes moveBox-7 {
  9.0909090909% { transform: translate(26px, 0); }
  18.1818181818% { transform: translate(26px, 0); }
  27.2727272727% { transform: translate(26px, 0); }
  36.3636363636% { transform: translate(0px, 0); }
  45.4545454545% { transform: translate(0px, -26px); }
  54.5454545455% { transform: translate(26px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(0px, 0px); }
  90.9090909091% { transform: translate(26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(7) { animation: moveBox-7 4s infinite; }

@keyframes moveBox-8 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, -26px); }
  36.3636363636% { transform: translate(0px, -26px); }
  45.4545454545% { transform: translate(0px, -26px); }
  54.5454545455% { transform: translate(0px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(26px, -26px); }
  90.9090909091% { transform: translate(26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(8) { animation: moveBox-8 4s infinite; }

@keyframes moveBox-9 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(-26px, 0); }
  45.4545454545% { transform: translate(0px, 0); }
  54.5454545455% { transform: translate(0px, 0); }
  63.6363636364% { transform: translate(-26px, 0); }
  72.7272727273% { transform: translate(-26px, 0); }
  81.8181818182% { transform: translate(-52px, 0); }
  90.9090909091% { transform: translate(-26px, 0); }
  100% { transform: translate(0px, 0); }
}
.banter-loader__box:nth-child(9) { animation: moveBox-9 4s infinite; }

/* AI Analysis Loader ("mrhyddenn" spinner) Styles */
.ai-analysis-loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: hsla(var(--background), 0.7); /* Use background with opacity */
  backdrop-filter: blur(3px);
  z-index: 10000; 
  display: flex;
  justify-content: center;
  align-items: center;
}

.ai-spinner { /* Main spinner container */
  width: 3em;
  height: 3em;
  border-radius: 50%;
  border: 2px solid hsl(var(--border)); /* Themed border */
  box-shadow: -10px -10px 10px hsla(var(--primary-hsl-values), 0.7), /* Primary color */
              0px -10px 10px 0px hsla(var(--accent-hsl-values), 0.7),  /* Accent color */
              10px -10px 10px hsla(var(--destructive), 0.5), /* Destructive color */
              10px 0 10px hsla(0, 70%, 50%, 0.8), /* Keep a distinct red for one segment */
              10px 10px 10px 0px hsla(var(--accent-hsl-values), 0.6), /* Accent color */
              0 10px 10px 0px hsla(var(--accent-hsl-values), 0.5), /* Accent color */
              -10px 10px 10px 0px hsla(var(--accent-hsl-values), 0.4); /* Accent color */
  animation: rot55 0.7s linear infinite;
}

.ai-spinner-inner { /* Inner part of the spinner */
  border: 2px solid hsl(var(--border));  /* Themed border */
  width: 1.5em;
  height: 1.5em;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes rot55 {
  to {
    transform: rotate(360deg);
  }
}

/* Codepen Button (Download PDF in ObjectAnalysisCard) */
.codepen-button {
  display: block;
  cursor: pointer;
  color: hsl(var(--primary-foreground));
  position: relative;
  text-decoration: none;
  font-weight: 600;
  border-radius: 6px;
  overflow: hidden;
  padding: 3px;
  isolation: isolate;
}

.codepen-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 400%;
  height: 100%;
  /* Use theme variables for the gradient */
  background: linear-gradient(115deg, 
    hsl(var(--primary)), 
    hsl(var(--accent)), 
    hsla(var(--primary-hsl-values),0.8), 
    hsl(var(--primary)), 
    hsla(var(--primary-hsl-values), 0.6));
  background-size: 25% 100%;
  animation: an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop .75s linear infinite;
  animation-play-state: paused;
  translate: -5% 0%;
  transition: translate 0.25s ease-out;
}

.codepen-button:hover::before {
  animation-play-state: running;
  transition-duration: 0.75s;
  translate: 0% 0%;
}

@keyframes an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop {
  to {
    transform: translateX(-25%);
  }
}

.codepen-button span {
  position: relative;
  display: flex; 
  align-items: center; 
  justify-content: center; 
  padding: 0.8rem 1.3rem; 
  font-size: 0.9rem; 
  background: hsl(var(--card)); /* Themed background for the span */
  border-radius: 3px;
  height: 100%;
  color: hsl(var(--card-foreground)); /* Themed text color for the span */
}


/* MuhammadHasann Animated Button CSS (for Analyze Images) */
.analyze-button-animated { /* Changed class name for specificity */
  --mh-button-black-700: hsl(var(--primary)); 
  --mh-button-border-radius: 9999px;
  --mh-button-transition: 0.3s ease-in-out;
  --mh-button-offset: 2px;
  
  --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.75);
  --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.85);
  --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.65);   

  --mh-button-dots-color: hsl(var(--primary-foreground)); 
  --mh-button-sparkle-color: hsl(var(--primary-foreground));

  --mh-button-text-color: hsl(var(--primary-foreground));
  --mh-button-text-hover-opacity: 1;

  --mh-button-disabled-opacity: 0.5;
  --mh-button-disabled-bg: hsl(var(--muted)); 
  --mh-button-disabled-shadow: none;

  cursor: pointer;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  transform-origin: center;
  padding: 0.8rem 1.5rem; /* Adjusted padding */
  background-color: transparent; 
  border: none;
  border-radius: var(--mh-button-border-radius);
  transform: scale(calc(1 + (var(--active, 0) * 0.05))); /* Reduced active scale */
  transition: transform var(--mh-button-transition);
  min-width: 150px; /* Ensure enough width for text + icon */
}

.analyze-button-animated::before { /* Main background and shadow layer */
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: var(--mh-button-black-700);
  border-radius: var(--mh-button-border-radius);
  box-shadow: inset 0 0.5px hsla(var(--primary-foreground-hsl-values, 0, 0%, 100%), 0.2), 
              inset 0 -1px 1px 0 hsla(0, 0%, 0%, 0.3), 
              0px 2px 4px -1px hsla(var(--primary-hsl-values), calc(0.3 * (1 - var(--active, 0)))), 
              0 0 0 calc(var(--active, 0) * 0.25rem) var(--mh-button-active-shadow-color); 
  transition: all var(--mh-button-transition);
  z-index: 0;
}

.analyze-button-animated::after { /* Gradient overlay on active */
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: hsla(var(--primary-hsl-values), 0.75); 
  background-image: radial-gradient(
      at 51% 89%,
      var(--mh-button-gradient-start) 0px,
      transparent 50%
    ),
    radial-gradient(at 100% 100%, var(--mh-button-gradient-mid) 0px, transparent 50%),
    radial-gradient(at 22% 91%, var(--mh-button-gradient-mid) 0px, transparent 50%);
  background-position: top;
  opacity: var(--active, 0);
  border-radius: var(--mh-button-border-radius);
  transition: opacity var(--mh-button-transition);
  z-index: 2; 
}

.analyze-button-animated:is(:hover, :focus-visible) {
  --active: 1; 
}
.analyze-button-animated:active {
  transform: scale(0.98); 
}

.analyze-button-animated .dots_border {
  --size_border: calc(100% + 2px); 
  overflow: hidden;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--size_border);
  height: var(--size_border);
  background-color: transparent;
  border-radius: var(--mh-button-border-radius);
  z-index: -10; 
}

.analyze-button-animated .dots_border::before {
  content: "";
  position: absolute;
  top: 30%; 
  left: 50%;
  transform: translate(-50%, -50%) rotate(0deg); 
  transform-origin: center; 
  width: 100%;
  height: 2rem; 
  background-color: var(--mh-button-dots-color); 
  mask: linear-gradient(transparent 0%, var(--mh-button-dots-color) 120%); 
  animation: mh-rotateDots 2s linear infinite; 
}

@keyframes mh-rotateDots { 
  to {
    transform: translate(-50%, -50%) rotate(360deg); 
  }
}

.analyze-button-animated .sparkle {
  position: relative;
  z-index: 10; 
  width: 1.5rem; /* Adjusted size */
  height: 1.5rem; /* Adjusted size */
}

.analyze-button-animated .sparkle .path {
  fill: var(--mh-button-sparkle-color); 
  stroke: var(--mh-button-sparkle-color); 
  transform-origin: center;
  color: var(--mh-button-sparkle-color); 
}

.analyze-button-animated:is(:hover, :focus) .sparkle .path {
  animation: mh-pathSparkle 1.5s linear 0.5s infinite; 
}

.analyze-button-animated .sparkle .path:nth-child(1) {
  --scale_path_1: 1.2;
}
.analyze-button-animated .sparkle .path:nth-child(2) {
  --scale_path_2: 1.2;
}
.analyze-button-animated .sparkle .path:nth-child(3) {
  --scale_path_3: 1.2;
}

@keyframes mh-pathSparkle { 
  0%,
  34%,
  71%,
  100% {
    transform: scale(1);
  }
  17% {
    transform: scale(var(--scale_path_1, 1));
  }
  49% {
    transform: scale(var(--scale_path_2, 1));
  }
  83% {
    transform: scale(var(--scale_path_3, 1));
  }
}

.analyze-button-animated .text_button {
  position: relative;
  z-index: 10; 
  background-image: linear-gradient(
    90deg,
    var(--mh-button-text-color) 0%, 
    hsla(var(--primary-foreground-hsl-values, 0, 0%, 100%), calc(var(--active, 0) * 0.8)) 120% 
  );
  background-clip: text;
  font-size: 1rem; /* Consistent font size */
  color: transparent;
  font-weight: 600; /* Ensure consistent font weight */
}

/* Disabled state for analyze-button-animated */
.analyze-button-animated:disabled {
  cursor: not-allowed;
  opacity: var(--mh-button-disabled-opacity);
}

.analyze-button-animated:disabled::before {
  background-color: var(--mh-button-disabled-bg) !important; 
  box-shadow: var(--mh-button-disabled-shadow) !important; 
}

.analyze-button-animated:disabled::after,
.analyze-button-animated:disabled .dots_border::before {
  display: none; 
}

.analyze-button-animated:disabled .sparkle {
  opacity: 0.3; 
}
.analyze-button-animated:disabled .text_button {
  background-image: none; 
  color: hsl(var(--muted-foreground)); 
}


/* Flipping Auth Form CSS */
/* Using auth- prefix to avoid conflicts */
.auth-container { 
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 1000px; 
  min-height: 450px; 
  width: 100%;
}

.auth-form { 
  display: flex; 
  position: relative; 
  width: 350px; 
  min-height: 480px; 
  transform-style: preserve-3d;
  transition: transform 1s ease;
}

.auth-form .form_front,
.auth-form .form_back {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem; 
  position: absolute;
  width: 100%; 
  height: 100%; 
  backface-visibility: hidden;
  padding: 40px 30px; 
  border-radius: 15px;
  background-color: hsla(var(--card), 0.9); 
  box-shadow: inset 1px 1px 5px hsla(var(--card-foreground), 0.1),
              inset -1px -1px 3px hsla(var(--border), 0.5),
              0 4px 15px hsla(var(--background), 0.3); 
}

.auth-form .form_back {
  transform: rotateY(-180deg);
}

.auth-form_details { 
  font-size: 1.75rem; 
  font-weight: 600;
  padding-bottom: 0.5rem; 
  color: hsl(var(--card-foreground)); 
  text-align: center;
}

.auth-input { 
  width: 100%; 
  min-height: 40px; 
  color: hsl(var(--input-foreground)); 
  outline: none;
  transition: 0.35s;
  padding: 0px 10px; 
  background-color: hsl(var(--input)); 
  border-radius: 6px;
  border: 1px solid hsl(var(--border)); 
  box-shadow: inset 0 1px 3px hsla(var(--background), 0.5); 
}

.auth-input::placeholder {
  color: hsl(var(--muted-foreground)); 
}

.auth-input:focus::placeholder {
  transition: 0.3s;
  opacity: 0;
}

.auth-input:focus {
  transform: scale(1.02); 
  border-color: hsl(var(--ring)); 
  box-shadow: inset 0 1px 3px hsla(var(--background), 0.5), 0 0 0 2px hsla(var(--ring), 0.5); 
}

.auth-btn { 
  padding: 10px 25px; 
  width: 100%; 
  cursor: pointer;
  background-color: hsl(var(--primary)); 
  border-radius: 6px;
  border: 1px solid hsl(var(--primary)); 
  color: hsl(var(--primary-foreground)); 
  font-size: 1rem; 
  font-weight: 600; 
  transition: 0.2s ease-out; 
}

.auth-btn:hover {
  background-color: hsla(var(--primary-hsl-values), 0.9); 
  transform: translateY(-1px); 
}

.auth-btn:focus-visible { 
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.auth-btn:active {
  transform: translateY(0px); 
}

.auth-form .auth-switch { 
  font-size: 0.875rem; 
  color: hsl(var(--muted-foreground)); 
  text-align: center;
}

.auth-form .auth-switch .auth-signup_tog { 
  font-weight: 600; 
  cursor: pointer;
  text-decoration: none; 
  color: hsl(var(--primary)); 
}
.auth-form .auth-switch .auth-signup_tog:hover {
  text-decoration: underline;
}

.auth-container #signup_toggle { 
  display: none;
}

.auth-container #signup_toggle:checked + .auth-form {
  transform: rotateY(-180deg);
}

/* Responsive adjustments for auth form */
@media (max-width: 400px) {
  .auth-form {
    width: 90%;
    min-height: auto; 
  }
  .auth-form .form_front,
  .auth-form .form_back {
    padding: 30px 20px;
  }
  .auth-form_details {
    font-size: 1.5rem;
  }
}

/* Download button for RoomCard - Vinodjangid07 Style */
.download-button-card {
  width: 40px; 
  height: 40px; 
  border-radius: 50%;
  border: none;
  background-color: hsla(var(--card), 0.5); 
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative; 
  transition-duration: .3s;
  box-shadow: 0 1px 3px hsla(var(--shadow, 0 0% 0% / 0.1)); 
}

.download-button-card .svgIcon {
  fill: hsl(var(--primary)); 
  height: 1.1em; 
  width: 1.1em;
  transition: fill 0.3s, transform 0.3s;
}

.download-button-card .icon2 {
  width: 14px; 
  height: 4px; 
  border-bottom: 2px solid hsl(var(--primary));
  border-left: 2px solid hsl(var(--primary));
  border-right: 2px solid hsl(var(--primary));
  transition-duration: .3s;
}

.download-button-card .tooltip {
  position: absolute;
  top: 50%;
  left: calc(100% + 12px); 
  transform: translateY(-50%);
  opacity: 0;
  visibility: hidden; 
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  padding: 6px 12px; 
  border-radius: var(--radius); 
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out; 
  pointer-events: none;
  letter-spacing: 0.5px;
  white-space: nowrap;
  z-index: 50; 
  box-shadow: 0 2px 8px hsla(var(--shadow, 0 0% 0% / 0.15));
}

.download-button-card .tooltip::before {
  position: absolute;
  content: "";
  width: 8px;
  height: 8px;
  background-color: hsl(var(--popover));
  transform: translateY(-50%) rotate(45deg);
  top: 50%;
  left: -4px; 
}

.download-button-card:hover .tooltip {
  opacity: 1;
  visibility: visible; 
}

.download-button-card:hover {
  background-color: hsl(var(--primary));
  transform: scale(1.1); 
}

.download-button-card:hover .icon2 {
  border-bottom: 2px solid hsl(var(--primary-foreground));
  border-left: 2px solid hsl(var(--primary-foreground));
  border-right: 2px solid hsl(var(--primary-foreground));
}

.download-button-card:hover .svgIcon {
  fill: hsl(var(--primary-foreground)); 
  animation: slide-in-top 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.download-button-card:disabled,
.download-button-card[disabled] {
  background-color: hsl(var(--muted)) !important; 
  opacity: 0.6 !important;
  cursor: not-allowed !important;
  transform: scale(1) !important; 
}
.download-button-card:disabled .svgIcon,
.download-button-card[disabled] .svgIcon {
  fill: hsl(var(--muted-foreground)) !important;
  animation: none !important; 
}
.download-button-card:disabled .icon2,
.download-button-card[disabled] .icon2 {
  border-color: hsl(var(--muted-foreground)) !important;
}
.download-button-card:disabled:hover .tooltip,
.download-button-card[disabled]:hover .tooltip {
  opacity: 0;
  visibility: hidden;
}

@keyframes slide-in-top {
  0% {
    transform: translateY(-6px); 
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}

/* Welcome Message Shine Effect (Themed for Light Gray Background) */
.welcome-message-shine {
  position: relative;
  background: linear-gradient(to right, 
    hsl(var(--foreground)), 
    hsl(var(--primary)), /* Shine color from primary */
    hsl(var(--foreground))
  );
  background-size: 200% auto;
  color: transparent;
  -webkit-background-clip: text;
  background-clip: text;
  animation: shine-animation 4s linear infinite;
  font-weight: inherit; 
  font-size: inherit; 
}

@keyframes shine-animation {
  to {
    background-position: -200% center;
  }
}

/* Custom Orange Room Card Theme */
.room-card-orange {
  --room-card-bg: hsl(24, 95%, 55%); /* A vibrant orange: approx #ff8c1a */
  --room-card-fg: hsl(0, 0%, 100%); /* White */
  --room-card-muted-fg: hsl(24, 80%, 90%); /* Very light orange/peach for descriptions */
  --room-card-icon-color: hsl(0, 0%, 100%); /* White for icons that were primary */
  --room-card-button-outline-border: hsl(24, 70%, 80%);
  --room-card-button-outline-hover-bg: hsla(24, 90%, 60%, 0.1);
  --room-card-button-default-bg: hsl(24, 80%, 45%);
  --room-card-button-default-hover-bg: hsl(24, 80%, 40%);
  --room-card-button-destructive-text: hsl(0, 70%, 85%);
  --room-card-button-destructive-border: hsl(0, 60%, 70%);
  --room-card-button-destructive-hover-bg: hsla(0, 70%, 50%, 0.1);
  --room-card-button-destructive-hover-text: hsl(0, 80%, 90%);
  --room-card-button-destructive-hover-border: hsl(0, 70%, 80%);

  background-color: var(--room-card-bg) !important;
  color: var(--room-card-fg) !important;
  border-color: hsl(24, 80%, 45%) !important; /* Darker orange border for the card itself */
}

/* Specific overrides for elements inside the orange card */
.room-card-orange .lucide {
  color: var(--room-card-icon-color) !important;
}
.room-card-orange .text-primary { /* If ShadCN's text-primary class is used on icons */
   color: var(--room-card-icon-color) !important;
}
.room-card-orange .text-muted-foreground, 
.room-card-orange .text-xs { /* For CardDescription or other small text */
   color: var(--room-card-muted-fg) !important;
}

/* Overrides for ShadCN Button variants inside the orange card */
.room-card-orange .shadcn-button-default { /* For Manage Room button */
  background-color: var(--room-card-button-default-bg) !important;
  color: var(--room-card-fg) !important;
  border-color: var(--room-card-button-default-hover-bg) !important; /* slightly darker border */
}
.room-card-orange .shadcn-button-default:hover {
  background-color: var(--room-card-button-default-hover-bg) !important;
}

.room-card-orange .shadcn-button-outline { /* For Edit button */
  color: var(--room-card-fg) !important;
  border-color: var(--room-card-button-outline-border) !important;
}
.room-card-orange .shadcn-button-outline:hover {
  background-color: var(--room-card-button-outline-hover-bg) !important;
  border-color: var(--room-card-fg) !important;
}
.room-card-orange .shadcn-button-outline.shadcn-button-icon { /* For download icon button */
   border-color: var(--room-card-button-outline-border) !important;
}
.room-card-orange .shadcn-button-outline.shadcn-button-icon:hover {
   background-color: var(--room-card-button-outline-hover-bg) !important;
   border-color: var(--room-card-fg) !important;
}


.room-card-orange .shadcn-button-destructive-outline { /* For Delete button trigger */
  color: var(--room-card-button-destructive-text) !important;
  border-color: var(--room-card-button-destructive-border) !important;
}
.room-card-orange .shadcn-button-destructive-outline:hover {
  background-color: var(--room-card-button-destructive-hover-bg) !important;
  color: var(--room-card-button-destructive-hover-text) !important;
  border-color: var(--room-card-button-destructive-hover-border) !important;
}
/* End of globals.css content */

