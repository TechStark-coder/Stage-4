
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-sans), sans-serif;
}

@layer base {
  :root {
    /* Light Gray Theme */
    --background: 220 20% 96%; /* Light Gray: #F0F2F5 */
    --foreground: 220 10% 20%; /* Dark Gray for text */

    --card: 0 0% 100%;           /* White cards */
    --card-foreground: 220 10% 20%; /* Dark Gray text for cards */

    --popover: 0 0% 100%;        /* White popovers */
    --popover-foreground: 220 10% 20%;

    /* Primary: A calm, professional Blue */
    --primary: 210 80% 55%;  /* Sky Blue */
    --primary-foreground: 0 0% 100%; /* White text on primary buttons */
    
    /* Accent: A complementary subtle color */
    --accent: 210 30% 90%; /* Light bluish gray */
    --accent-foreground: 220 10% 20%; /* Dark text for contrast on accent */

    /* HSL versions for button animations (if needed for other custom buttons) */
    --primary-hsl-values: 210, 80%, 55%; 
    --muted-hsl-values: 220, 15%, 75%; 
    --accent-hsl-values: 210, 30%, 90%; 

    --secondary: 220 10% 85%;   /* Medium Gray */
    --secondary-foreground: 220 10% 25%; 

    --muted: 220 15% 90%;       /* Lighter Gray */
    --muted-foreground: 220 10% 45%; 

    --destructive: 0 70% 50%;    /* A clear red for destructive actions */
    --destructive-foreground: 0 0% 100%; 

    --border: 220 15% 85%;      /* Gray border */
    --input: 0 0% 100%;         /* White input background */
    --input-foreground: 220 10% 15%; 
    --ring: 210 70% 60%;         /* Blue for focus rings */

    --radius: 0.5rem;

    /* Sidebar specific variables */
    --sidebar-background: 220 10% 15%; /* Dark gray sidebar */
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 210 80% 55%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 220 10% 25%;
    --sidebar-accent-foreground: 0 0% 90%;
    --sidebar-border: 220 10% 30%;
    --sidebar-ring: 210 70% 60%;

     /* Custom Button (MuhammadHasann) Variables */
    --mh-button-black-700: hsl(var(--card)); 
    --mh-button-border-radius: 9999px;
    --mh-button-transition: 0.3s ease-in-out;
    --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.75);
    --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.7); 
    --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.5);   
    --mh-button-dots-color: hsl(var(--primary-foreground));
    --mh-button-sparkle-color: hsl(var(--primary-foreground));
    --mh-button-text-color: hsl(var(--primary-foreground));
    --mh-button-text-hover-opacity: 0.7; 
     /* Disabled state for MuhammadHasann button */
    --mh-button-disabled-opacity: 0.5;
    --mh-button-disabled-bg: hsl(var(--muted));
    --mh-button-disabled-shadow: none;
  }

  .dark {
    --background: 220 10% 4%; /* Very Dark Gray/Almost Black */
    --foreground: 220 5% 90%; /* Light Gray/Off-white text */

    --card: 220 8% 10%;           /* Darker Gray cards */
    --card-foreground: 220 5% 90%; /* Light Gray text for cards */

    --popover: 220 8% 8%;        /* Dark Popovers */
    --popover-foreground: 220 5% 90%;

    --primary: 175 70% 45%;  /* Teal/Cyan */
    --primary-foreground: 175 60% 10%; /* Dark text on primary buttons */
    
    --accent: 260 50% 60%; /* Subtle Purple */
    --accent-foreground: 0 0% 98%; 

    --primary-hsl-values: 175, 70%, 45%; 
    --muted-hsl-values: 220, 8%, 30%; 
    --accent-hsl-values: 260, 50%, 60%;

    --secondary: 220, 8%, 18%;   /* Dark Gray */
    --secondary-foreground: 220, 5%, 80%; 

    --muted: 220, 8%, 25%;       /* Slightly Lighter Dark Gray */
    --muted-foreground: 220, 5%, 60%; 

    --destructive: 0 65% 55%;    
    --destructive-foreground: 0 0% 98%; 

    --border: 220 8% 20%;      
    --input: 220 8% 15%;         
    --input-foreground: 220 5% 90%; 
    --ring: 175 60% 50%;         

    /* Sidebar specific variables - dark mode */
    --sidebar-background: 220 10% 12%; 
    --sidebar-foreground: 0 0% 90%;
    --sidebar-primary: 175 70% 45%;
    --sidebar-primary-foreground: 175 60% 10%;
    --sidebar-accent: 220 10% 20%;
    --sidebar-accent-foreground: 0 0% 85%;
    --sidebar-border: 220 10% 25%;
    --sidebar-ring: 175 60% 50%;

     /* Custom Button (MuhammadHasann) Variables for dark mode */
    --mh-button-black-700: hsl(var(--card)); 
    --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.6);
    --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.6); 
    --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.4);   
    --mh-button-dots-color: hsl(var(--primary-foreground));
    --mh-button-sparkle-color: hsl(var(--primary-foreground));
    --mh-button-text-color: hsl(var(--primary-foreground));
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  main {
    flex-grow: 1;
  }
}

/* Banter Loader Styles */
.loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: hsla(var(--background), 0.6); /* Use background with opacity */
  backdrop-filter: blur(2px);
  z-index: 9998; 
  display: flex;
  justify-content: center;
  align-items: center;
}

.banter-loader {
  position: fixed; 
  left: 50%;
  top: 50%;
  width: 72px;
  height: 72px;
  margin-left: -36px;
  margin-top: -36px;
  z-index: 9999; 
}

.banter-loader__box {
  float: left;
  position: relative;
  width: 20px;
  height: 20px;
  margin-right: 6px;
}

.banter-loader__box:before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: hsl(var(--primary)); 
}

.banter-loader__box:nth-child(3n) {
  margin-right: 0;
  margin-bottom: 6px;
}

.banter-loader__box:nth-child(1):before, .banter-loader__box:nth-child(4):before {
  margin-left: 26px;
}

.banter-loader__box:nth-child(3):before {
  margin-top: 52px;
}

.banter-loader__box:last-child {
  margin-bottom: 0;
}

@keyframes moveBox-1 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(0px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 26px); }
  54.5454545455% { transform: translate(26px, 26px); }
  63.6363636364% { transform: translate(26px, 26px); }
  72.7272727273% { transform: translate(26px, 0px); }
  81.8181818182% { transform: translate(0px, 0px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(1) { animation: moveBox-1 4s infinite; }

@keyframes moveBox-2 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 26px); }
  54.5454545455% { transform: translate(26px, 26px); }
  63.6363636364% { transform: translate(26px, 26px); }
  72.7272727273% { transform: translate(26px, 26px); }
  81.8181818182% { transform: translate(0px, 26px); }
  90.9090909091% { transform: translate(0px, 26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(2) { animation: moveBox-2 4s infinite; }

@keyframes moveBox-3 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(-26px, 0); }
  45.4545454545% { transform: translate(-26px, 0); }
  54.5454545455% { transform: translate(-26px, 0); }
  63.6363636364% { transform: translate(-26px, 0); }
  72.7272727273% { transform: translate(-26px, 0); }
  81.8181818182% { transform: translate(-26px, -26px); }
  90.9090909091% { transform: translate(0px, -26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(3) { animation: moveBox-3 4s infinite; }

@keyframes moveBox-4 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, -26px); }
  36.3636363636% { transform: translate(0px, -26px); }
  45.4545454545% { transform: translate(0px, 0px); }
  54.5454545455% { transform: translate(0px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(-26px, -26px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(4) { animation: moveBox-4 4s infinite; }

@keyframes moveBox-5 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(0, 0); }
  27.2727272727% { transform: translate(0, 0); }
  36.3636363636% { transform: translate(26px, 0); }
  45.4545454545% { transform: translate(26px, 0); }
  54.5454545455% { transform: translate(26px, 0); }
  63.6363636364% { transform: translate(26px, 0); }
  72.7272727273% { transform: translate(26px, 0); }
  81.8181818182% { transform: translate(26px, -26px); }
  90.9090909091% { transform: translate(0px, -26px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(5) { animation: moveBox-5 4s infinite; }

@keyframes moveBox-6 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, 0); }
  36.3636363636% { transform: translate(0px, 0); }
  45.4545454545% { transform: translate(0px, 0); }
  54.5454545455% { transform: translate(0px, 0); }
  63.6363636364% { transform: translate(0px, 0); }
  72.7272727273% { transform: translate(0px, 26px); }
  81.8181818182% { transform: translate(-26px, 26px); }
  90.9090909091% { transform: translate(-26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(6) { animation: moveBox-6 4s infinite; }

@keyframes moveBox-7 {
  9.0909090909% { transform: translate(26px, 0); }
  18.1818181818% { transform: translate(26px, 0); }
  27.2727272727% { transform: translate(26px, 0); }
  36.3636363636% { transform: translate(0px, 0); }
  45.4545454545% { transform: translate(0px, -26px); }
  54.5454545455% { transform: translate(26px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(0px, 0px); }
  90.9090909091% { transform: translate(26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(7) { animation: moveBox-7 4s infinite; }

@keyframes moveBox-8 {
  9.0909090909% { transform: translate(0, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(-26px, -26px); }
  36.3636363636% { transform: translate(0px, -26px); }
  45.4545454545% { transform: translate(0px, -26px); }
  54.5454545455% { transform: translate(0px, -26px); }
  63.6363636364% { transform: translate(0px, -26px); }
  72.7272727273% { transform: translate(0px, -26px); }
  81.8181818182% { transform: translate(26px, -26px); }
  90.9090909091% { transform: translate(26px, 0px); }
  100% { transform: translate(0px, 0px); }
}
.banter-loader__box:nth-child(8) { animation: moveBox-8 4s infinite; }

@keyframes moveBox-9 {
  9.0909090909% { transform: translate(-26px, 0); }
  18.1818181818% { transform: translate(-26px, 0); }
  27.2727272727% { transform: translate(0px, 0); }
  36.3636363636% { transform: translate(-26px, 0); }
  45.4545454545% { transform: translate(0px, 0); }
  54.5454545455% { transform: translate(0px, 0); }
  63.6363636364% { transform: translate(-26px, 0); }
  72.7272727273% { transform: translate(-26px, 0); }
  81.8181818182% { transform: translate(-52px, 0); }
  90.9090909091% { transform: translate(-26px, 0); }
  100% { transform: translate(0px, 0); }
}
.banter-loader__box:nth-child(9) { animation: moveBox-9 4s infinite; }

/* AI Analysis Loader ("mrhyddenn" spinner) Styles */
.ai-analysis-loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: hsla(var(--background), 0.7); /* Use background with opacity */
  backdrop-filter: blur(3px);
  z-index: 10000; 
  display: flex;
  justify-content: center;
  align-items: center;
}

/* From Uiverse.io by mrhyddenn - Adapted for theming */
.ai-spinner { 
  width: 3em;
  height: 3em;
  border-radius: 50%;
  border: 2px solid hsl(var(--border)); /* Themed border */
  /* Using theme colors for the glow segments */
  box-shadow: -10px -10px 10px hsla(var(--primary-hsl-values), 0.7), /* Primary color */
              0px -10px 10px 0px hsla(var(--accent-hsl-values), 0.7),  /* Accent color */
              10px -10px 10px hsla(var(--destructive), 0.5), /* Destructive color */
              10px 0 10px hsla(0, 70%, 50%, 0.8), /* Keep a distinct red for one segment */
              10px 10px 10px 0px hsla(var(--accent-hsl-values), 0.6), /* Accent color */
              0 10px 10px 0px hsla(var(--accent-hsl-values), 0.5), /* Accent color */
              -10px 10px 10px 0px hsla(var(--accent-hsl-values), 0.4); /* Accent color */
  animation: rot55 0.7s linear infinite;
}

.ai-spinner-inner { 
  border: 2px solid hsl(var(--border));  /* Themed border */
  width: 1.5em;
  height: 1.5em;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes rot55 {
  to {
    transform: rotate(360deg);
  }
}

/* Codepen Button (Download PDF in ObjectAnalysisCard) */
.codepen-button {
  display: block;
  cursor: pointer;
  color: hsl(var(--primary-foreground));
  position: relative;
  text-decoration: none;
  font-weight: 600;
  border-radius: 6px;
  overflow: hidden;
  padding: 3px;
  isolation: isolate;
}

.codepen-button::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 400%;
  height: 100%;
  background: linear-gradient(115deg, hsl(var(--primary-hsl-values)), hsl(var(--accent-hsl-values)), hsla(var(--primary-hsl-values),0.8), hsl(var(--primary)), hsla(var(--primary-hsl-values), 0.6));
  background-size: 25% 100%;
  animation: an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop .75s linear infinite;
  animation-play-state: paused;
  translate: -5% 0%;
  transition: translate 0.25s ease-out;
}

.codepen-button:hover::before {
  animation-play-state: running;
  transition-duration: 0.75s;
  translate: 0% 0%;
}

@keyframes an-at-keyframe-css-at-rule-that-translates-via-the-transform-property-the-background-by-negative-25-percent-of-its-width-so-that-it-gives-a-nice-border-animation_-We-use-the-translate-property-to-have-a-nice-transition-so-it_s-not-a-jerk-of-a-start-or-stop {
  to {
    transform: translateX(-25%);
  }
}

.codepen-button span {
  position: relative;
  display: flex; 
  align-items: center; 
  justify-content: center; 
  padding: 0.8rem 1.3rem; 
  font-size: 0.9rem; 
  background: hsl(var(--card)); 
  border-radius: 3px;
  height: 100%;
}


/* MuhammadHasann Animated Button CSS (for Analyze Images) */
/* analyze-button-animated is the class name used in PhotoUploader.tsx */
.analyze-button-animated {
  /* Use theme variables for colors */
  --mh-button-black-700: hsl(var(--card)); 
  --mh-button-border-radius: 9999px; /* Keep this for the pill shape */
  --mh-button-transition: 0.3s ease-in-out;
  --mh-button-offset: 2px; /* Original had this, can be used for subtle effects if desired */
  
  /* Active state theming */
  --mh-button-active-shadow-color: hsla(var(--primary-hsl-values), 0.75); /* Glow with primary color */
  --mh-button-gradient-start: hsla(var(--primary-hsl-values), 0.7); /* Gradient with primary color */
  --mh-button-gradient-mid: hsla(var(--primary-hsl-values), 0.5);   /* Gradient with primary color */

  /* Dots and Sparkle theming */
  --mh-button-dots-color: hsl(var(--primary-foreground)); /* Contrast with primary bg */
  --mh-button-sparkle-color: hsl(var(--primary-foreground)); /* Contrast with primary bg */

  /* Text theming */
  --mh-button-text-color: hsl(var(--primary-foreground));
  --mh-button-text-hover-opacity: 0.7; /* Original has this for text, seems fine */

  /* Disabled state theming */
  --mh-button-disabled-opacity: 0.5;
  --mh-button-disabled-bg: hsl(var(--muted)); /* Use theme's muted color */
  --mh-button-disabled-shadow: none;


  cursor: pointer;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  transform-origin: center;
  padding: 0.8rem 1.5rem; /* Adjust padding as needed */
  background-color: transparent; /* Base is transparent, ::before provides main bg */
  border: none;
  border-radius: var(--mh-button-border-radius);
  transform: scale(calc(1 + (var(--active, 0) * 0.05))); /* Subtle scale on hover/focus */
  transition: transform var(--mh-button-transition);
  min-width: 150px; /* Ensure it has some minimum width */
}

.analyze-button-animated::before { /* Main background and shadow layer */
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: hsl(var(--primary)); /* Use primary color for button background */
  border-radius: var(--mh-button-border-radius);
  box-shadow: inset 0 0.5px hsl(var(--border)), /* Subtle inner border */
              inset 0 -1px 2px 0 hsl(0, 0%, 0%), /* Inner bottom shadow for depth */
              0px 2px 5px -2px hsla(0 0% 0% / calc(1 - var(--active, 0))), /* Base shadow */
              0 0 0 calc(var(--active, 0) * 0.25rem) var(--mh-button-active-shadow-color); /* Active glow shadow */
  transition: all var(--mh-button-transition);
  z-index: 0;
}

.analyze-button-animated::after { /* Gradient overlay on active */
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  background-color: hsla(var(--primary-hsl-values), 0.75); /* Fallback or base for gradient */
  background-image: radial-gradient(
      at 51% 89%,
      var(--mh-button-gradient-start) 0px,
      transparent 50%
    ),
    radial-gradient(at 100% 100%, var(--mh-button-gradient-mid) 0px, transparent 50%),
    radial-gradient(at 22% 91%, var(--mh-button-gradient-mid) 0px, transparent 50%);
  background-position: top;
  opacity: var(--active, 0);
  border-radius: var(--mh-button-border-radius);
  transition: opacity var(--mh-button-transition);
  z-index: 2; /* Above ::before but below text/icon */
}

.analyze-button-animated:is(:hover, :focus-visible) {
  --active: 1; /* Activates hover/focus styles */
}
.analyze-button-animated:active {
  transform: scale(0.98); /* Slightly press down on active click */
}

.analyze-button-animated .dots_border {
  --size_border: calc(100% + 2px); /* As per original */
  overflow: hidden;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: var(--size_border);
  height: var(--size_border);
  background-color: transparent;
  border-radius: var(--mh-button-border-radius);
  z-index: -10; /* Behind everything */
}

.analyze-button-animated .dots_border::before {
  content: "";
  position: absolute;
  top: 30%; /* As per original */
  left: 50%;
  transform: translate(-50%, -50%) rotate(0deg); /* Ensure rotate is part of transform */
  transform-origin: center; /* Rotate around center */
  width: 100%;
  height: 2rem; /* As per original */
  background-color: var(--mh-button-dots-color); /* Themed dots color */
  mask: linear-gradient(transparent 0%, var(--mh-button-dots-color) 120%); /* As per original */
  animation: mh-rotateDots 2s linear infinite; /* Renamed animation to avoid conflict */
}

@keyframes mh-rotateDots { /* Renamed animation */
  to {
    transform: translate(-50%, -50%) rotate(360deg); /* Ensure translate is also present */
  }
}

.analyze-button-animated .sparkle {
  position: relative;
  z-index: 10; /* Above background layers */
  width: 1.5rem; /* Adjusted from 1.75rem to better fit with text/icon */
  height: 1.5rem; /* Keep aspect ratio */
}

.analyze-button-animated .sparkle .path {
  fill: var(--mh-button-sparkle-color); /* Themed sparkle color */
  stroke: var(--mh-button-sparkle-color); /* Themed sparkle color */
  transform-origin: center;
  color: var(--mh-button-sparkle-color); /* For currentColor usage if path doesn't have fill/stroke */
}

.analyze-button-animated:is(:hover, :focus) .sparkle .path {
  animation: mh-pathSparkle 1.5s linear 0.5s infinite; /* Renamed animation */
}

.analyze-button-animated .sparkle .path:nth-child(1) {
  --scale_path_1: 1.2;
}
.analyze-button-animated .sparkle .path:nth-child(2) {
  --scale_path_2: 1.2;
}
.analyze-button-animated .sparkle .path:nth-child(3) {
  --scale_path_3: 1.2;
}

@keyframes mh-pathSparkle { /* Renamed animation */
  0%,
  34%,
  71%,
  100% {
    transform: scale(1);
  }
  17% {
    transform: scale(var(--scale_path_1, 1));
  }
  49% {
    transform: scale(var(--scale_path_2, 1));
  }
  83% {
    transform: scale(var(--scale_path_3, 1));
  }
}

.analyze-button-animated .text_button {
  position: relative;
  z-index: 10; /* Above background layers */
  background-image: linear-gradient(
    90deg,
    var(--mh-button-text-color) 0%, /* Use themed text color */
    hsla(0 0% 100% / var(--active, 0)) 120% /* Original effect, might need tweaking based on text color */
  );
  background-clip: text;
  font-size: 1rem;
  color: transparent;
  font-weight: 600; /* Match ShadCN button weight */
}

/* Disabled state for analyze-button-animated */
.analyze-button-animated:disabled {
  cursor: not-allowed;
  /* background-color: var(--mh-button-disabled-bg); Ensure the ::before element handles disabled bg */
}

.analyze-button-animated:disabled::before {
  background-color: var(--mh-button-disabled-bg) !important; /* Override active bg */
  box-shadow: var(--mh-button-disabled-shadow) !important; /* Remove active shadow */
  opacity: var(--mh-button-disabled-opacity);
}

.analyze-button-animated:disabled::after,
.analyze-button-animated:disabled .dots_border::before {
  display: none; /* Hide active/hover effects */
}

.analyze-button-animated:disabled .sparkle {
  opacity: 0.3; /* Dim the sparkle icon */
}
.analyze-button-animated:disabled .text_button {
  background-image: none; /* Remove gradient text effect */
  color: hsl(var(--muted-foreground)); /* Use muted text color */
  opacity: 0.7;
}


/* Flipping Auth Form CSS */
/* Using auth- prefix to avoid conflicts */
.auth-container { 
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 1000px; 
  min-height: 450px; /* Ensure enough height for the card */
  width: 100%; /* Ensure it takes available width for centering */
}

.auth-form { 
  display: flex; /* Changed from flex to relative for positioning context */
  position: relative; /* Added */
  width: 350px; /* Set a fixed width */
  height: auto; /* Let content define height, or set a fixed min-height */
  min-height: 480px; /* Example min-height */
  transform-style: preserve-3d;
  transition: transform 1s ease;
}

.auth-form .form_front,
.auth-form .form_back {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem; /* Adjusted gap */
  position: absolute;
  width: 100%; /* Ensure full width of parent */
  height: 100%; /* Ensure full height of parent */
  backface-visibility: hidden;
  padding: 40px 30px; /* Adjusted padding */
  border-radius: 15px;
  background-color: hsla(var(--card), 0.9); /* Themed with slight transparency */
  box-shadow: inset 1px 1px 5px hsla(var(--card-foreground), 0.1),
              inset -1px -1px 3px hsla(var(--border), 0.5),
              0 4px 15px hsla(var(--background), 0.3); /* Themed shadows */
}

.auth-form .form_back {
  transform: rotateY(-180deg);
}

.auth-form_details { 
  font-size: 1.75rem; /* Adjusted size */
  font-weight: 600;
  padding-bottom: 0.5rem; /* Adjusted padding */
  color: hsl(var(--card-foreground)); /* Themed */
  text-align: center;
}

.auth-input { 
  width: 100%; /* Full width within padding */
  min-height: 40px; /* Adjusted height */
  color: hsl(var(--input-foreground)); /* Themed */
  outline: none;
  transition: 0.35s;
  padding: 0px 10px; /* Adjusted padding */
  background-color: hsl(var(--input)); /* Themed */
  border-radius: 6px;
  border: 1px solid hsl(var(--border)); /* Themed */
  box-shadow: inset 0 1px 3px hsla(var(--background), 0.5); /* Inner shadow for depth */
}

.auth-input::placeholder {
  color: hsl(var(--muted-foreground)); /* Themed */
}

.auth-input:focus::placeholder {
  transition: 0.3s;
  opacity: 0;
}

.auth-input:focus {
  transform: scale(1.02); /* Slight scale on focus */
  border-color: hsl(var(--ring)); /* Use ring color for focus border */
  box-shadow: inset 0 1px 3px hsla(var(--background), 0.5), 0 0 0 2px hsla(var(--ring), 0.5); /* Focus shadow */
}

.auth-btn { 
  padding: 10px 25px; /* Adjusted padding */
  width: 100%; /* Full width */
  cursor: pointer;
  background-color: hsl(var(--primary)); /* Themed */
  border-radius: 6px;
  border: 1px solid hsl(var(--primary)); /* Consistent border */
  color: hsl(var(--primary-foreground)); /* Themed */
  font-size: 1rem; /* Adjusted font size */
  font-weight: 600; /* Bold text */
  transition: 0.2s ease-out; /* Smooth transition */
}

.auth-btn:hover {
  background-color: hsla(var(--primary-hsl-values), 0.9); /* Slightly darken on hover */
  transform: translateY(-1px); /* Slight lift on hover */
}

.auth-btn:focus-visible { /* For keyboard navigation */
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.auth-btn:active {
  transform: translateY(0px); /* Reset lift on active */
}

.auth-form .auth-switch { 
  font-size: 0.875rem; /* Adjusted size */
  color: hsl(var(--muted-foreground)); /* Themed */
  text-align: center;
}

.auth-form .auth-switch .auth-signup_tog { 
  font-weight: 600; 
  cursor: pointer;
  text-decoration: none; /* Remove default underline */
  color: hsl(var(--primary)); /* Themed */
}
.auth-form .auth-switch .auth-signup_tog:hover {
  text-decoration: underline;
}

.auth-container #signup_toggle { 
  display: none;
}

.auth-container #signup_toggle:checked + .auth-form {
  transform: rotateY(-180deg);
}

/* Responsive adjustments for auth form */
@media (max-width: 400px) {
  .auth-form {
    width: 90%;
    min-height: auto; /* Allow height to adjust */
  }
  .auth-form .form_front,
  .auth-form .form_back {
    padding: 30px 20px;
  }
  .auth-form_details {
    font-size: 1.5rem;
  }
}

/* Download button for RoomCard - .download-button-card */
.download-button-card {
  width: 40px; /* Default size */
  height: 40px;
  border-radius: 50%;
  border: none;
  background-color: hsla(var(--card), 0.5); /* Semi-transparent card color */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  position: relative; /* For tooltip */
  transition: background-color 0.3s, transform 0.3s;
  box-shadow: 0 1px 3px hsla(var(--shadow, 0 0% 0% / 0.1)); /* Subtle shadow */
}

.download-button-card .svgIcon { /* SVG inside the button */
  fill: hsl(var(--primary)); /* Primary color for the icon */
  height: 1.1em; /* Adjust size if needed */
  width: 1.1em;
  transition: fill 0.3s, transform 0.3s;
}

.download-button-card .icon2 { /* Second part of icon, hidden by default */
  display: none; 
}

.download-button-card .tooltip {
  position: absolute;
  top: 50%;
  left: calc(100% + 12px); /* Position to the right with some space */
  transform: translateY(-50%);
  opacity: 0;
  visibility: hidden;
  background-color: hsl(var(--popover));
  color: hsl(var(--popover-foreground));
  padding: 6px 12px; /* Slightly more padding */
  border-radius: 6px; /* Match theme radius */
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
  pointer-events: none;
  letter-spacing: 0.5px;
  white-space: nowrap;
  z-index: 50; /* Ensure it's above card content but below modals */
  box-shadow: 0 2px 8px hsla(var(--shadow, 0 0% 0% / 0.15));
}

.download-button-card .tooltip::before {
  position: absolute;
  content: "";
  width: 8px;
  height: 8px;
  background-color: hsl(var(--popover));
  transform: translateY(-50%) rotate(45deg);
  top: 50%;
  left: -4px; /* Adjust for arrow position */
}

.download-button-card:hover .tooltip {
  opacity: 1;
  visibility: visible;
}

.download-button-card:hover {
  background-color: hsl(var(--primary));
  transform: scale(1.1); /* Slight scale on hover */
}

.download-button-card:hover .svgIcon {
  fill: hsl(var(--primary-foreground)); /* Contrasting color for icon on hover */
  animation: slide-in-top 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.download-button-card:disabled,
.download-button-card[disabled] {
  background-color: hsl(var(--muted));
  opacity: 0.6;
  cursor: not-allowed;
}
.download-button-card:disabled .svgIcon,
.download-button-card[disabled] .svgIcon {
  fill: hsl(var(--muted-foreground));
}
.download-button-card:disabled:hover .tooltip,
.download-button-card[disabled]:hover .tooltip {
  opacity: 0;
  visibility: hidden;
}

/* Keyframes for download icon animation if needed */
@keyframes slide-in-top {
  0% {
    transform: translateY(-6px); /* Adjusted for icon size */
    opacity: 0;
  }
  100% {
    transform: translateY(0px);
    opacity: 1;
  }
}
